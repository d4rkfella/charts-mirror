---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Chart Builder

on:
  workflow_call:
    inputs:
      name:
        type: string
        description: Chart Name
        required: true
      version:
        type: string
        description: Chart Version
        required: true
      registry:
        type: string
        description: Chart Registry
        required: true
      release:
        type: boolean
        description: Release
        required: true

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      chart-exists: ${{ steps.chart.outputs.exists }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Repository Name
        id: repository
        run: |
          echo "name=${GITHUB_REPOSITORY#*/}" >> $GITHUB_OUTPUT

      - name: Check For Exising Chart
        uses: ./.github/actions/chart-exists
        id: chart
        with:
          chart: ${{ steps.repository.outputs.name }}/${{ inputs.name }}

  build:
    name: Build (${{ inputs.version }})
    runs-on: ubuntu-latest
    needs: ["prepare"]
    steps:
      - name: Install Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0

      - if: ${{ inputs.release }}
        name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - if: ${{ inputs.release }}
        name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Add Helm Repository
        run: |
          helm repo add upstream ${{ inputs.registry }}

      - name: Update Helm Repository
        run: |
          helm repo update upstream

      - name: Pull Chart
        run: |
          helm pull upstream/${{ inputs.name }} --version ${{ inputs.version }}

      - if: ${{ inputs.release }}
        name: Push Chart
        run: |
          helm push *.tgz oci://ghcr.io/${{ github.repository }}

      - if: ${{ inputs.release }}
        name: Sign artifacts with Cosign
        run: |
          cosign sign --yes ghcr.io/${{ github.repository }}/${{ inputs.name }}:${{ inputs.version }}

  release:
    if: ${{ inputs.release && needs.prepare.outputs.chart-exists != 'true' }}
    name: Release
    needs: ["prepare", "build"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Repository Name
        id: repository
        run: |
          echo "name=${GITHUB_REPOSITORY#*/}" >> $GITHUB_OUTPUT

      - name: Generate Token
        uses: actions/create-github-app-token@db3cdf40984fe6fd25ae19ac2bf2f4886ae8d959 # v2.0.5
        id: app-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_APP_PRIVATE_KEY }}

      - name: Get Release Tag
        uses: ./.github/actions/release-tag
        id: release
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Create Release
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1.16.0
        with:
          body: |
            > [!NOTE]
            > A new chart has been added.

            ## ğŸ“¦ Chart

            **Name**: [${{ inputs.name }}](https://github.com/${{ github.repository }}/pkgs/container/${{ steps.repository.outputs.name }}%2F${{ inputs.name }})
          tag: ${{ steps.release.outputs.tag }}
          token: ${{ steps.app-token.outputs.token }}
